#ifndef __PARAMS__
#define __PARAMS__

#include <stdint.h>

/* HGSW Parameters */
namespace hgsw_params {
    
    class prm {
    public:
        static constexpr const uint16_t n = 81; // MLWE secret key dimension over Rq
        static constexpr const uint16_t p = 19; // the plaintext modulus
        static constexpr const uint16_t nu = 325; // number of ciphertexts in re-randomization privacy analysis
        static constexpr const uint16_t mq = 4; // number of digits of q base beta
        static constexpr const uint16_t d = 32; // ring dimension 
        static constexpr const uint16_t s = 2; // Gaussian parameter for initial LWE error
        static constexpr const uint16_t tau = 1; // sparsification parameter
        static constexpr const uint16_t beta = 54919; // base used to compute mq (number of rows of the HGSW ciphertexts)
        static constexpr const uint16_t ell_p = 2; // number of ring splitting factors mod p
        static constexpr const uint16_t f = 16; // degree of the irreducible factors of x^d + 1 mod p
        static constexpr const uint16_t f_num = 2; // number of phi matrices used in CRT
        static constexpr const uint16_t ell = 6; // the plaintext dimension over Rp 
        static constexpr const uint16_t ell_pr = 7; // extended plaintext dimension over Rp (ell_pr = ell + tau)
        static constexpr const uint16_t rho = 3; // number of repetitions for knowledge amplification
        static constexpr const uint16_t w = 4 * rho; // 4rho, used to encode a plaintext vector qi
        static constexpr const uint16_t v = w / ell_p; // auxiliary parameter used in CRT-Decode
        static constexpr const uint16_t zero = 0;
        
        static constexpr const double sig_s = 0.797884560802839; // sig_s = s / sqrt(2 * pi)   
        static constexpr const double sig_r = 493497539448.708; // sig_r = r / sqrt(2 * pi)
        
        static constexpr const uint64_t q = 9096391148455610003ULL; // the ciphertext modulus before mod switching
        static constexpr const uint64_t m[3] = {1950, 8450, 32500}; // the PCP query length, m = 2 * Ng, Ng ~= 2^10, 2^12, 2^14

        static constexpr const uint64_t qpr = 1183187; // the ciphertext modulus after mod switching
        static constexpr const uint64_t qprop = 62273; // qpr / p
        static constexpr const uint64_t qprop_inv = 2; // qprop^-1 mod p;                
                                            
        static constexpr const double poq = 0.0000000000000000020887404345212; // p / q; 
        static constexpr const double poqpr = 0.0000160583238321584; // p / qpr; 
        static constexpr const double qproq = 0.000000000000130072133078939; // qpr / q; 
                                              
        static constexpr const uint64_t qbar = 478757428866084737ULL; // NTT friendly prime (Rq = Rp * Rqbar, qbar = 1 (mod 2d)) 
        static constexpr const uint64_t qbmp = 14474908714770168ULL; // NTT(qbar mod p)
        static constexpr const uint64_t qb_inv = 6; // qbar^-1 mod p;
        
        static constexpr const uint16_t rp_shift = 64; // number of shifts used in plantard modular reduction
        static constexpr const __uint128_t rp_r_qbar = (((__uint128_t)2594488098315967366ULL)<<64)|9714240157448392833ULL; // r constant used in plantard modular reduction (mod qbar)
        static constexpr const __uint128_t rp_conv_fact_qbar = (((__uint128_t)9258229842767062917ULL)<<64)|4546252045887605733ULL; // convert factor used in plantard modular reduction (mod qbar)
        static constexpr const __uint128_t inv_n_qbar = (((__uint128_t)1810460009982644444ULL)<<64)|3762334518740803205ULL; // constant used in inverse NTT (mod qbar)
        
        static constexpr const __uint128_t rp_r_qprop = (((__uint128_t)7953904984875871893ULL)<<64)|14345229477583101121ULL; // r constant used in plantard modular reduction (mod qpr/p)
        static constexpr const __uint128_t rp_conv_fact_qprop = (((__uint128_t)1280575444103325544ULL)<<64)|10206686907708578525ULL; // convert factor used in plantard modular reduction (mod qpr/p)
        static constexpr const __uint128_t inv_n_qprop = (((__uint128_t)16965921347576652148ULL)<<64)|12553964219546365159ULL; // constant used in inverse NTT (mod qpr/p)       
        
        /* root table to convert to plantard form (mod qbar) */
        static constexpr const __uint128_t root_qbar[d] = {0,(((__uint128_t)12664055421328632349ULL)<<64)|7983862103749179703ULL,(((__uint128_t)12968274253257948644ULL)<<64)|2010930405635602629ULL,(((__uint128_t)7989463515659111323ULL)<<64)|18177549814761346177ULL,(((__uint128_t)18020740583429681648ULL)<<64)|4309986302105436519ULL,(((__uint128_t)5068707207487718189ULL)<<64)|2950881157227990797ULL,(((__uint128_t)3869739774132584255ULL)<<64)|10922760053624876779ULL,(((__uint128_t)15237221407139111425ULL)<<64)|6632774078268185344ULL,(((__uint128_t)14799319565831184561ULL)<<64)|12735941375330856983ULL,(((__uint128_t)1186851807293911056ULL)<<64)|1703157070692580357ULL,(((__uint128_t)13253159073200843535ULL)<<64)|4520659008497078885ULL,(((__uint128_t)8678550260559302935ULL)<<64)|2884357645423678567ULL,(((__uint128_t)12880732654590513378ULL)<<64)|752238729626667233ULL,(((__uint128_t)15169685692649401199ULL)<<64)|8895197529711054439ULL,(((__uint128_t)13368217882883150903ULL)<<64)|598422489051718454ULL,(((__uint128_t)15891280085040588536ULL)<<64)|16050958060771623151ULL,(((__uint128_t)14011724737914202569ULL)<<64)|15396119686198361000ULL,(((__uint128_t)11159822633786967536ULL)<<64)|928933925814387527ULL,(((__uint128_t)11419793800786800735ULL)<<64)|2797997628980876947ULL,(((__uint128_t)15812757904153977654ULL)<<64)|17471100684317516600ULL,(((__uint128_t)12559368320912734983ULL)<<64)|13725156522326599998ULL,(((__uint128_t)9915860907744430114ULL)<<64)|3777553794979241800ULL,(((__uint128_t)6967168870134814243ULL)<<64)|11211149291237167738ULL,(((__uint128_t)11576170397305661762ULL)<<64)|8050373014499484150ULL,(((__uint128_t)11803309597329923108ULL)<<64)|16350724660837751735ULL,(((__uint128_t)16524038360629367043ULL)<<64)|14062644181723181582ULL,(((__uint128_t)17778456652770285237ULL)<<64)|10466346275008886737ULL,(((__uint128_t)14410732779671262748ULL)<<64)|11932435205547490145ULL,(((__uint128_t)12695388660311226588ULL)<<64)|10548526591949073840ULL,(((__uint128_t)6000269319183352384ULL)<<64)|3724397806576887809ULL,(((__uint128_t)9783678449818910096ULL)<<64)|2314760239358474052ULL,(((__uint128_t)17301709610092248477ULL)<<64)|7581791095662489163ULL};
        
        /* inverse root table to convert from plantard form (mod qbar) */
        static constexpr const __uint128_t root_inv_qbar[d] = {0,(((__uint128_t)1394561856581730862ULL)<<64)|6174807529765413335ULL, 
(((__uint128_t)10457280558050440292ULL)<<64)|269194258948205440ULL,(((__uint128_t)5478469820451602971ULL)<<64)|16435813668073948988ULL,(((__uint128_t)3209522666570440190ULL)<<64)|11813969995441366273ULL,(((__uint128_t)14577004299576967360ULL)<<64)|7523984020084674838ULL,(((__uint128_t)13378036866221833426ULL)<<64)|15495862916481560820ULL,(((__uint128_t)426003490279869967ULL)<<64)|14136757771604115098ULL,(((__uint128_t)2555463988668963079ULL)<<64)|2395786012937928466ULL,(((__uint128_t)5078526190826400712ULL)<<64)|17848321584657833163ULL,(((__uint128_t)3277058381060150416ULL)<<64)|9551546543998497178ULL,(((__uint128_t)5566011419119038237ULL)<<64)|17694505344082884384ULL,(((__uint128_t)9768193813150248680ULL)<<64)|15562386428285873050ULL,(((__uint128_t)5193585000508708080ULL)<<64)|13926085065212472732ULL,(((__uint128_t)17259892266415640559ULL)<<64)|16743587003016971260ULL,(((__uint128_t)3647424507878367054ULL)<<64)|5710802698378694634ULL,(((__uint128_t)1145034463617303138ULL)<<64)|10864952978047062454ULL,(((__uint128_t)8663065623890641519ULL)<<64)|16131983834351077565ULL,(((__uint128_t)12446474754526199231ULL)<<64)|14722346267132663808ULL,(((__uint128_t)5751355413398325027ULL)<<64)|7898217481760477777ULL,(((__uint128_t)4036011294038288867ULL)<<64)|6514308868162061472ULL,(((__uint128_t)668287420939266378ULL)<<64)|7980397798700664880ULL,(((__uint128_t)1922705713080184572ULL)<<64)|4384099891986370035ULL,(((__uint128_t)6643434476379628507ULL)<<64)|2096019412871799882ULL,(((__uint128_t)6870573676403889853ULL)<<64)|10396371059210067467ULL,(((__uint128_t)11479575203574737372ULL)<<64)|7235594782472383879ULL,(((__uint128_t)8530883165965121501ULL)<<64)|14669190278730309817ULL,(((__uint128_t)5887375752796816632ULL)<<64)|4721587551382951619ULL,(((__uint128_t)2633986169555573961ULL)<<64)|975643389392035017ULL,(((__uint128_t)7026950272922750880ULL)<<64)|15648746444728674670ULL,(((__uint128_t)7286921439922584079ULL)<<64)|17517810147895164090ULL,(((__uint128_t)4435019335795349046ULL)<<64)|3050624387511190617ULL};
        
        /* root table to convert to plantard form (mod qpr/p) */
        static constexpr const __uint128_t root_qprop[d] = {0,(((__uint128_t)13584823008692692452ULL)<<64)|13734119798844919165ULL,(((__uint128_t)2063198697242577473ULL)<<64)|8682615508237930844ULL,(((__uint128_t)7566740491366030004ULL)<<64)|11852506284862887275ULL,(((__uint128_t)17547112423526391847ULL)<<64)|11003232678977105564ULL,(((__uint128_t)14514373261664294478ULL)<<64)|15484802397653768105ULL,(((__uint128_t)5958541535539762509ULL)<<64)|9740726886062839205ULL,(((__uint128_t)4452243563468189436ULL)<<64)|11982844752456101071ULL,(((__uint128_t)9608907299519702524ULL)<<64)|12665344364580566039ULL,(((__uint128_t)12214491756224040135ULL)<<64)|2159175205197580360ULL,(((__uint128_t)1251841736474821594ULL)<<64)|1793338824566628001ULL,(((__uint128_t)15998158225697039714ULL)<<64)|4558884127862637088ULL,(((__uint128_t)497655967174089038ULL)<<64)|15257302526945613116ULL,(((__uint128_t)990868577498409425ULL)<<64)|9625792055548823403ULL,(((__uint128_t)16632669583844003238ULL)<<64)|13866235609178040422ULL,(((__uint128_t)2317358709049344375ULL)<<64)|8173703037044427886ULL,(((__uint128_t)16618747065714728128ULL)<<64)|13593117274812260604ULL,(((__uint128_t)12995337666623384603ULL)<<64)|3347625050615702517ULL,(((__uint128_t)14700994249354577868ULL)<<64)|7371232789976209311ULL,(((__uint128_t)12800422412813533062ULL)<<64)|17970712443204336685ULL,(((__uint128_t)17603691167413446018ULL)<<64)|1516073357141064108ULL,(((__uint128_t)9191824203221418377ULL)<<64)|15865449967783949304ULL,(((__uint128_t)12647867160971476006ULL)<<64)|7913322325647984871ULL,(((__uint128_t)10853639665034894275ULL)<<64)|6862024094992721777ULL,(((__uint128_t)9715251640124165599ULL)<<64)|1014566480697175571ULL,(((__uint128_t)16214401592385780784ULL)<<64)|12725774017737419708ULL,(((__uint128_t)4070411098178069930ULL)<<64)|1352557825069577710ULL,(((__uint128_t)2339871717088172212ULL)<<64)|16857503440442297037ULL,(((__uint128_t)9571286878191661269ULL)<<64)|17814602505882464706ULL,(((__uint128_t)9669040728886571616ULL)<<64)|16199886626676536522ULL,(((__uint128_t)15926768292310756703ULL)<<64)|5905813700922507838ULL,(((__uint128_t)14252807655107913156ULL)<<64)|11923599994459185709ULL};
        
        /* inverse root table to convert from plantard form (mod qpr/p) */        
        static constexpr const __uint128_t root_inv_qprop[d] = {0,(((__uint128_t)14642341938937631660ULL)<<64)|4650713502757855899ULL,(((__uint128_t)10880003582343521611ULL)<<64)|6594237788846664342ULL,(((__uint128_t)16383545376466974142ULL)<<64)|9764128565471620773ULL,(((__uint128_t)13994500510241362179ULL)<<64)|6463899321253450546ULL,(((__uint128_t)12488202538169789106ULL)<<64)|8706017187646712412ULL,(((__uint128_t)3932370812045257137ULL)<<64)|2961941676055783512ULL,(((__uint128_t)899631650183159768ULL)<<64)|7443511394732446053ULL,(((__uint128_t)16129385364660207240ULL)<<64)|10273041036665123731ULL,(((__uint128_t)1814074489865548377ULL)<<64)|4580508464531511195ULL,(((__uint128_t)17455875496211142190ULL)<<64)|8820952018160728214ULL,(((__uint128_t)17949088106535462577ULL)<<64)|3189441546763938501ULL,(((__uint128_t)2448585848012511901ULL)<<64)|13887859945846914529ULL,(((__uint128_t)17194902337234730021ULL)<<64)|16653405249142923616ULL,(((__uint128_t)6232252317485511480ULL)<<64)|16287568868511971257ULL,(((__uint128_t)8837836774189849091ULL)<<64)|5781399709128985578ULL,(((__uint128_t)4193936418601638459ULL)<<64)|6523144079250365908ULL,(((__uint128_t)2519975781398794912ULL)<<64)|12540930372787043779ULL,(((__uint128_t)8777703344822979999ULL)<<64)|2246857447033015095ULL,(((__uint128_t)8875457195517890346ULL)<<64)|632141567827086911ULL,(((__uint128_t)16106872356621379403ULL)<<64)|1589240633267254580ULL,(((__uint128_t)14376332975531481685ULL)<<64)|17094186248639973907ULL,(((__uint128_t)2232342481323770831ULL)<<64)|5720970055972131909ULL,(((__uint128_t)8731492433585386016ULL)<<64)|17432177593012376046ULL,(((__uint128_t)7593104408674657340ULL)<<64)|11584719978716829840ULL,(((__uint128_t)5798876912738075609ULL)<<64)|10533421748061566746ULL,(((__uint128_t)9254919870488133238ULL)<<64)|2581294105925602313ULL,(((__uint128_t)843052906296105597ULL)<<64)|16930670716568487509ULL,(((__uint128_t)5646321660896018553ULL)<<64)|476031630505214932ULL,(((__uint128_t)3745749824354973747ULL)<<64)|11075511283733342306ULL,(((__uint128_t)5451406407086167012ULL)<<64)|15099119023093849100ULL,(((__uint128_t)1827997007994823487ULL)<<64)|4853626798897291013ULL};
       
        /* phi matrix used in CRT-Encode */
        static constexpr const uint16_t PHI_19[f_num][f][f] = { { {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18} }, { {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18},{0,0,0,0,1,0,0,0,0,0,0,0,6,0,0,0},{0,13,0,0,0,0,0,0,0,1,0,0,0,0,0,0},{0,0,0,0,0,0,6,0,0,0,0,0,0,0,18,0},{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},{0,0,18,0,0,0,0,0,0,0,13,0,0,0,0,0},{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,6},{0,0,0,0,13,0,0,0,0,0,0,0,1,0,0,0},{0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0} } }; 
       
        /* inverse of phi matrix used in CRT-Decode */
        static constexpr const uint16_t PHI_19_pr[f_num][f][f] = { { {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18} }, { {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0},{0,0,13,0,0,0,0,0,0,0,18,0,0,0,0,0},{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},{0,0,0,0,18,0,0,0,0,0,0,0,6,0,0,0},{0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},{0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,0,0,0,0,13,0,0},{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18},{0,0,0,0,13,0,0,0,0,0,0,0,18,0,0,0},{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},{0,0,0,0,0,0,18,0,0,0,0,0,0,0,6,0},{0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0} } }; 
       
    };
}

#endif
